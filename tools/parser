#!/usr/bin/python

"""
Visualizes a given field.

FIELD_EXTRACTOR_NAME specifies the function name as a 
string. If you want to extract a custom field, specify
your own extractor function and define it as a global 
function.

Usage: parser <path_to_file>
path is relative to local directory
"""

import sys
import os

# Modify this to fit your own custom function naem
FIELD_EXTRACTOR_NAME = 'myExtractFn'

# The CSV file this will output data to
# outfile = open(os.path.join(os.getcwd(), 'data', '2010.csv'), 'w')
outfile = ''

# csv's delimiter
DELIM = ","

# --------------------------------------------
# Helpers

def myExtractFn(line):
    val = float(line[99:105])
    return (val if val > 0 else 0)

# ------------------------------------------------
# Main Execution 

line_counter = 0

def printStats():
    global line_counter
    print "Lines processed: " + str(line_counter)

def _writeline(file, line):
    file.write(line + "\n")

def writeOut(line):
    global outfile
    _writeline(outfile, line)

def processlineW(line):
    global line_counter
    fields = [
        str(globals()[FIELD_EXTRACTOR_NAME](line)),
    ]
    writeOut(DELIM.join(fields))
    line_counter += 1

def main(argv):
    global outfile

    cwd = os.getcwd()
    path = cwd
    if len(argv) >= 2:
        path = os.path.join(cwd, argv[1])

    outfile = open(path + ".csv", "w")
    with open(path) as f:
        for line in f:
            processlineW(line)
    printStats()

if __name__ == "__main__":
    main(sys.argv)
